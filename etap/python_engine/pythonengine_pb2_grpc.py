#***********************
#
# Copyright (c) 2021-2023, Operation Technology, Inc.
#
# THIS PROGRAM IS CONFIDENTIAL AND PROPRIETARY TO OPERATION TECHNOLOGY, INC. 
# ANY USE OF THIS PROGRAM IS SUBJECT TO THE PROGRAM SOFTWARE LICENSE AGREEMENT, 
# EXCEPT THAT THE USER MAY MODIFY THE PROGRAM FOR ITS OWN USE. 
# HOWEVER, THE PROGRAM MAY NOT BE REPRODUCED, PUBLISHED, OR DISCLOSED TO OTHERS 
# WITHOUT THE PRIOR WRITTEN CONSENT OF OPERATION TECHNOLOGY, INC.
#
#***********************

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from etap.python_engine import pythonengine_pb2 as pythonengine__pb2


class PythonEngineServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PingService = channel.unary_unary(
                '/API.PythonEngineService/PingService',
                request_serializer=pythonengine__pb2.Nothing.SerializeToString,
                response_deserializer=pythonengine__pb2.PingResult.FromString,
                )
        self.Init = channel.unary_unary(
                '/API.PythonEngineService/Init',
                request_serializer=pythonengine__pb2.InitRequest.SerializeToString,
                response_deserializer=pythonengine__pb2.InitResult.FromString,
                )
        self.RunStep = channel.unary_unary(
                '/API.PythonEngineService/RunStep',
                request_serializer=pythonengine__pb2.RunStepRequest.SerializeToString,
                response_deserializer=pythonengine__pb2.RunStepResult.FromString,
                )


class PythonEngineServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def PingService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Init(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunStep(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PythonEngineServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PingService': grpc.unary_unary_rpc_method_handler(
                    servicer.PingService,
                    request_deserializer=pythonengine__pb2.Nothing.FromString,
                    response_serializer=pythonengine__pb2.PingResult.SerializeToString,
            ),
            'Init': grpc.unary_unary_rpc_method_handler(
                    servicer.Init,
                    request_deserializer=pythonengine__pb2.InitRequest.FromString,
                    response_serializer=pythonengine__pb2.InitResult.SerializeToString,
            ),
            'RunStep': grpc.unary_unary_rpc_method_handler(
                    servicer.RunStep,
                    request_deserializer=pythonengine__pb2.RunStepRequest.FromString,
                    response_serializer=pythonengine__pb2.RunStepResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'API.PythonEngineService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PythonEngineService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def PingService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API.PythonEngineService/PingService',
            pythonengine__pb2.Nothing.SerializeToString,
            pythonengine__pb2.PingResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Init(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API.PythonEngineService/Init',
            pythonengine__pb2.InitRequest.SerializeToString,
            pythonengine__pb2.InitResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RunStep(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/API.PythonEngineService/RunStep',
            pythonengine__pb2.RunStepRequest.SerializeToString,
            pythonengine__pb2.RunStepResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
